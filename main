#!/usr/bin/env bash
test -z "$(type -p)" || { echo bash required; exit 1; }
set -Eueo pipefail
source "${RRCONFINC}"

doDisable() {
  local module="$1"

  systemctl disable "${module}.timer" || true
  rm -f "/etc/systemd/system/${module}.timer"
  rm -f "/etc/systemd/system/${module}.service"
  systemctl daemon-reload
}

doEnable() {
  local module="$1"

  systemctl is-enabled "${module}.timer" >/dev/null 2>&1 &&
    return 0
  install -m 644 "${modulepath}/systemd.timer" "/etc/systemd/system/${module}.timer"
  if [[ -f "${modulepath}/systemd.service" ]]; then
    install -m 644 "${modulepath}/systemd.service" "/etc/systemd/system/${module}.service"
  else
    cat  > "/etc/systemd/system/${module}.service" <<EOT
[Unit]
Description=periodical run of ${module}

[Service]
ExecStart=${RRCONF}/require ${module}
Type=oneshot
EOT
  fi
  systemctl daemon-reload
  systemctl enable --now "${module}.timer"
}

test $# -ne 2 &&
  fail "Usage: require periodical {enable|disable} module"

# ensure we have the module we are about to enable/disable timer for
modulepath="${RRMODULES}/${2}"
test -d "${modulepath}" ||
  getrepo "${2}"

test -f "${modulepath}/systemd.timer" ||
  fail "Module ${2} has no systemd.timer file"

case "${1}" in
enable)
  doEnable "${2}"
  ;;
disable)
  doDisable "${2}"
  ;;
*)
  fail "Usage: require periodical {enable|disable} module"
  ;;
esac
